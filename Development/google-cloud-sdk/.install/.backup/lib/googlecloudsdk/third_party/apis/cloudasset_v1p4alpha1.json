{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "cloudasset:v1p4alpha1",
  "name": "cloudasset",
  "canonicalName": "Cloud Asset",
  "version": "v1p4alpha1",
  "revision": "0",
  "title": "Cloud Asset API",
  "description": "The cloud asset API manages the history and inventory of cloud resources.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/resource-manager/docs/cloud-asset-inventory/quickstart-cloud-asset-inventory",
  "protocol": "rest",
  "rootUrl": "https://cloudasset.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://cloudasset.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ExportAssetsRequest": {
      "id": "ExportAssetsRequest",
      "description": "Export asset request.",
      "type": "object",
      "properties": {
        "readTime": {
          "description": "Timestamp to take an asset snapshot. This can only be set to a timestamp\nbetween 2018-10-02 UTC (inclusive) and the current time. If not specified,\nthe current time will be used. Due to delays in resource data collection\nand indexing, there is a volatile window during which running the same\nquery may get different results.",
          "type": "string",
          "format": "google-datetime"
        },
        "assetTypes": {
          "description": "A list of asset types of which to take a snapshot for. For example:\n\"compute.googleapis.com\/Disk\". If specified, only matching assets will be\nreturned. See [Introduction to Cloud Asset\nInventory](https:\/\/cloud.google.com\/resource-manager\/docs\/cloud-asset-inventory\/overview)\nfor all supported asset types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contentType": {
          "description": "Asset content type. If not specified, no content but the asset name will be\nreturned.",
          "enumDescriptions": [
            "Unspecified content type.",
            "Resource metadata.",
            "The actual IAM policy set on a resource.",
            "The IAM policy name for the IAM policy set on a resource.",
            "The Cloud Organization Policy set on an asset.",
            "The Cloud Access context mananger Policy set on an asset."
          ],
          "type": "string",
          "enum": [
            "CONTENT_TYPE_UNSPECIFIED",
            "RESOURCE",
            "IAM_POLICY",
            "IAM_POLICY_NAME",
            "ORG_POLICY",
            "ACCESS_POLICY"
          ]
        },
        "outputConfig": {
          "description": "Required. Output configuration indicating where the results will be output\nto. All results will be in newline delimited JSON format.",
          "$ref": "OutputConfig"
        }
      }
    },
    "OutputConfig": {
      "id": "OutputConfig",
      "description": "Output configuration for export assets destination.",
      "type": "object",
      "properties": {
        "gcsDestination": {
          "description": "Destination on Cloud Storage.",
          "$ref": "GcsDestination"
        },
        "bigqueryDestination": {
          "description": "Destination on Bigquery. The output table stores the fields in asset\nproto as columns in BigQuery. The resource\/iam_policy field is converted\nto a record with each field to a column, except metadata to a single JSON\nstring.",
          "$ref": "BigQueryDestination"
        }
      }
    },
    "GcsDestination": {
      "id": "GcsDestination",
      "description": "A Cloud Storage location.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The uri of the Cloud Storage object. It's the same uri that is used by\ngsutil. For example: \"gs:\/\/bucket_name\/object_name\". See [Viewing and\nEditing Object\nMetadata](https:\/\/cloud.google.com\/storage\/docs\/viewing-editing-metadata)\nfor more information.",
          "type": "string"
        },
        "uriPrefix": {
          "description": "The uri prefix of all generated Cloud Storage objects. For example:\n\"gs:\/\/bucket_name\/object_name_prefix\". Each object uri is in format:\n\"gs:\/\/bucket_name\/object_name_prefix\/<asset type>\/<shard number> and only\ncontains assets for that type. <shard number> starts from 0. For example:\n\"gs:\/\/bucket_name\/object_name_prefix\/compute.googleapis.com\/Disk\/0\" is\nthe first shard of output objects containing all\ncompute.googleapis.com\/Disk assets. An INVALID_ARGUMENT error will be\nreturned if file with the same name \"gs:\/\/bucket_name\/object_name_prefix\"\nalready exists.",
          "type": "string"
        }
      }
    },
    "BigQueryDestination": {
      "id": "BigQueryDestination",
      "description": "A Bigquery destination.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Required. The BigQuery dataset in format\n\"projects\/projectId\/datasets\/datasetId\", to which the snapshot result\nshould be exported. If this dataset does not exist, the export call returns\nan error.",
          "type": "string"
        },
        "table": {
          "description": "Required. The BigQuery table to which the snapshot result should be\nwritten. If this table does not exist, a new table with the given name\nwill be created.",
          "type": "string"
        },
        "force": {
          "description": "If the destination table already exists and this flag is `TRUE`, the\ntable will be overwritten by the contents of assets snapshot. If the flag\nis not set and the destination table already exists, the export call\nreturns an error.",
          "type": "boolean"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`\/`Create`\/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "BatchGetAssetsHistoryResponse": {
      "id": "BatchGetAssetsHistoryResponse",
      "description": "Batch get assets history response.",
      "type": "object",
      "properties": {
        "assets": {
          "description": "A list of assets with valid time windows.",
          "type": "array",
          "items": {
            "$ref": "TemporalAsset"
          }
        }
      }
    },
    "TemporalAsset": {
      "id": "TemporalAsset",
      "description": "Temporal asset. In addition to the asset, the temporal asset includes the\nstatus of the asset and valid from and to time of it.",
      "type": "object",
      "properties": {
        "window": {
          "description": "The time window when the asset data and state was observed.",
          "$ref": "TimeWindow"
        },
        "deleted": {
          "description": "If the asset is deleted or not.",
          "type": "boolean"
        },
        "asset": {
          "description": "Asset.",
          "$ref": "Asset"
        }
      }
    },
    "TimeWindow": {
      "id": "TimeWindow",
      "description": "A time window of (start_time, end_time].",
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Start time of the time window (exclusive).",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "End time of the time window (inclusive).\nCurrent timestamp if not specified.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "Asset": {
      "id": "Asset",
      "description": "Cloud asset. This includes all Google Cloud Platform resources,\nCloud IAM policies, and other non-GCP assets.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The full name of the asset. For example:\n`\/\/compute.googleapis.com\/projects\/my_project_123\/zones\/zone1\/instances\/instance1`.\nSee [Resource\nNames](https:\/\/cloud.google.com\/apis\/design\/resource_names#full_resource_name)\nfor more information.",
          "type": "string"
        },
        "assetType": {
          "description": "Type of the asset. Example: \"compute.googleapis.com\/Disk\".",
          "type": "string"
        },
        "resource": {
          "description": "Representation of the resource.",
          "$ref": "Resource"
        },
        "iamPolicy": {
          "description": "Representation of the actual Cloud IAM policy set on a cloud resource. For\neach resource, there must be at most one Cloud IAM policy set on it.",
          "$ref": "Policy"
        },
        "iamPolicyName": {
          "description": "Cloud IAM policy name of the Cloud IAM policy set on a cloud resource. For\neach resource, there must be at most one Cloud IAM policy name associated\nwith it.",
          "type": "string",
          "format": "byte"
        },
        "orgPolicy": {
          "description": "Representation of the Cloud Organization Policy set on an asset. For each\nasset, there could be multiple Organization policies with different\nconstraints.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudOrgpolicyV1Policy"
          }
        },
        "accessPolicy": {
          "$ref": "GoogleIdentityAccesscontextmanagerV1AccessPolicy"
        },
        "accessLevel": {
          "$ref": "GoogleIdentityAccesscontextmanagerV1AccessLevel"
        },
        "servicePerimeter": {
          "$ref": "GoogleIdentityAccesscontextmanagerV1ServicePerimeter"
        }
      }
    },
    "Resource": {
      "id": "Resource",
      "description": "Representation of a cloud resource.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The API version. Example: \"v1\".",
          "type": "string"
        },
        "discoveryDocumentUri": {
          "description": "The URL of the discovery document containing the resource's JSON schema.\nFor example:\n`\"https:\/\/www.googleapis.com\/discovery\/v1\/apis\/compute\/v1\/rest\"`.\nIt will be left unspecified for resources without a discovery-based API,\nsuch as Cloud Bigtable.",
          "type": "string"
        },
        "discoveryName": {
          "description": "The JSON schema name listed in the discovery document.\nExample: \"Project\". It will be left unspecified for resources (such as\nCloud Bigtable) without a discovery-based API.",
          "type": "string"
        },
        "resourceUrl": {
          "description": "The REST URL for accessing the resource. An HTTP GET operation using this\nURL returns the resource itself.\nExample:\n`https:\/\/cloudresourcemanager.googleapis.com\/v1\/projects\/my-project-123`.\nIt will be left unspecified for resources without a REST API.",
          "type": "string"
        },
        "parent": {
          "description": "The full name of the immediate parent of this resource. See\n[Resource\nNames](https:\/\/cloud.google.com\/apis\/design\/resource_names#full_resource_name)\nfor more information.\n\nFor GCP assets, it is the parent resource defined in the [Cloud IAM policy\nhierarchy](https:\/\/cloud.google.com\/iam\/docs\/overview#policy_hierarchy).\nFor example:\n`\"\/\/cloudresourcemanager.googleapis.com\/projects\/my_project_123\"`.\n\nFor third-party assets, it is up to the users to define.",
          "type": "string"
        },
        "data": {
          "description": "The content of the resource, in which some sensitive fields are scrubbed\naway and may not be present.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "internalData": {
          "description": "The actual metadata content for the resource, only visible for internal\nusers.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions (defined by IAM or configured by users). A `binding` can\noptionally specify a `condition`, which is a logic expression that further\nconstrains the role binding based on attributes about the request and\/or\ntarget resource.\n\n**JSON Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles\/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles\/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time <\n            timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ]\n    }\n\n**YAML Example**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles\/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles\/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https:\/\/cloud.google.com\/iam\/docs).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nOperations affecting conditional bindings must specify version 3. This can\nbe either setting a conditional policy, modifying a conditional binding,\nor removing a conditional binding from the stored conditional policy.\nOperations on non-conditional policies may specify any valid value or\nleave the field unset.\n\nIf no etag is provided in the call to `setIamPolicy`, any version\ncompliance checks on the incoming and\/or stored policy is skipped.",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally may specify a\n`condition` that determines when binding is in effect.\n`bindings` with no members will result in an error.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten. Due to blind-set semantics of an etag-less policy,\n'setIamPolicy' will not fail even if either of incoming or stored policy\ndoes not meet the version requirements.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently.",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) > 0\"",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
          "type": "string"
        },
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudOrgpolicyV1Policy": {
      "id": "GoogleCloudOrgpolicyV1Policy",
      "description": "Defines a Cloud Organization `Policy` which is used to specify `Constraints`\nfor configurations of Cloud Platform resources.",
      "type": "object",
      "properties": {
        "version": {
          "description": "Version of the `Policy`. Default version is 0;",
          "type": "integer",
          "format": "int32"
        },
        "constraint": {
          "description": "The name of the `Constraint` the `Policy` is configuring, for example,\n`constraints\/serviceuser.services`.\n\nImmutable after creation.",
          "type": "string"
        },
        "etag": {
          "description": "An opaque tag indicating the current version of the `Policy`, used for\nconcurrency control.\n\nWhen the `Policy` is returned from either a `GetPolicy` or a\n`ListOrgPolicy` request, this `etag` indicates the version of the current\n`Policy` to use when executing a read-modify-write loop.\n\nWhen the `Policy` is returned from a `GetEffectivePolicy` request, the\n`etag` will be unset.\n\nWhen the `Policy` is used in a `SetOrgPolicy` method, use the `etag` value\nthat was returned from a `GetOrgPolicy` request as part of a\nread-modify-write loop for concurrency control. Not setting the `etag`in a\n`SetOrgPolicy` request will result in an unconditional write of the\n`Policy`.",
          "type": "string",
          "format": "byte"
        },
        "updateTime": {
          "description": "The time stamp the `Policy` was previously updated. This is set by the\nserver, not specified by the caller, and represents the last time a call to\n`SetOrgPolicy` was made for that `Policy`. Any value set by the client will\nbe ignored.",
          "type": "string",
          "format": "google-datetime"
        },
        "listPolicy": {
          "description": "List of values either allowed or disallowed.",
          "$ref": "GoogleCloudOrgpolicyV1ListPolicy"
        },
        "booleanPolicy": {
          "description": "For boolean `Constraints`, whether to enforce the `Constraint` or not.",
          "$ref": "GoogleCloudOrgpolicyV1BooleanPolicy"
        },
        "restoreDefault": {
          "description": "Restores the default behavior of the constraint; independent of\n`Constraint` type.",
          "$ref": "GoogleCloudOrgpolicyV1RestoreDefault"
        }
      }
    },
    "GoogleCloudOrgpolicyV1ListPolicy": {
      "id": "GoogleCloudOrgpolicyV1ListPolicy",
      "description": "Used in `policy_type` to specify how `list_policy` behaves at this\nresource.\n\n`ListPolicy` can define specific values and subtrees of Cloud Resource\nManager resource hierarchy (`Organizations`, `Folders`, `Projects`) that\nare allowed or denied by setting the `allowed_values` and `denied_values`\nfields. This is achieved by using the `under:` and optional `is:` prefixes.\nThe `under:` prefix is used to denote resource subtree values.\nThe `is:` prefix is used to denote specific values, and is required only\nif the value contains a \":\". Values prefixed with \"is:\" are treated the\nsame as values with no prefix.\nAncestry subtrees must be in one of the following formats:\n    - \"projects\/<project-id>\", e.g. \"projects\/tokyo-rain-123\"\n    - \"folders\/<folder-id>\", e.g. \"folders\/1234\"\n    - \"organizations\/<organization-id>\", e.g. \"organizations\/1234\"\nThe `supports_under` field of the associated `Constraint`  defines whether\nancestry prefixes can be used. You can set `allowed_values` and\n`denied_values` in the same `Policy` if `all_values` is\n`ALL_VALUES_UNSPECIFIED`. `ALLOW` or `DENY` are used to allow or deny all\nvalues. If `all_values` is set to either `ALLOW` or `DENY`,\n`allowed_values` and `denied_values` must be unset.",
      "type": "object",
      "properties": {
        "allowedValues": {
          "description": "List of values allowed  at this resource. Can only be set if `all_values`\nis set to `ALL_VALUES_UNSPECIFIED`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deniedValues": {
          "description": "List of values denied at this resource. Can only be set if `all_values`\nis set to `ALL_VALUES_UNSPECIFIED`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allValues": {
          "description": "The policy all_values state.",
          "enumDescriptions": [
            "Indicates that allowed_values or denied_values must be set.",
            "A policy with this set allows all values.",
            "A policy with this set denies all values."
          ],
          "type": "string",
          "enum": [
            "ALL_VALUES_UNSPECIFIED",
            "ALLOW",
            "DENY"
          ]
        },
        "suggestedValue": {
          "description": "Optional. The Google Cloud Console will try to default to a configuration\nthat matches the value specified in this `Policy`. If `suggested_value`\nis not set, it will inherit the value specified higher in the hierarchy,\nunless `inherit_from_parent` is `false`.",
          "type": "string"
        },
        "inheritFromParent": {
          "description": "Determines the inheritance behavior for this `Policy`.\n\nBy default, a `ListPolicy` set at a resource supercedes any `Policy` set\nanywhere up the resource hierarchy. However, if `inherit_from_parent` is\nset to `true`, then the values from the effective `Policy` of the parent\nresource are inherited, meaning the values set in this `Policy` are\nadded to the values inherited up the hierarchy.\n\nSetting `Policy` hierarchies that inherit both allowed values and denied\nvalues isn't recommended in most circumstances to keep the configuration\nsimple and understandable. However, it is possible to set a `Policy` with\n`allowed_values` set that inherits a `Policy` with `denied_values` set.\nIn this case, the values that are allowed must be in `allowed_values` and\nnot present in `denied_values`.\n\nFor example, suppose you have a `Constraint`\n`constraints\/serviceuser.services`, which has a `constraint_type` of\n`list_constraint`, and with `constraint_default` set to `ALLOW`.\nSuppose that at the Organization level, a `Policy` is applied that\nrestricts the allowed API activations to {`E1`, `E2`}. Then, if a\n`Policy` is applied to a project below the Organization that has\n`inherit_from_parent` set to `false` and field all_values set to DENY,\nthen an attempt to activate any API will be denied.\n\nThe following examples demonstrate different possible layerings for\n`projects\/bar` parented by `organizations\/foo`:\n\nExample 1 (no inherited values):\n  `organizations\/foo` has a `Policy` with values:\n    {allowed_values: \"E1\" allowed_values:\"E2\"}\n  `projects\/bar` has `inherit_from_parent` `false` and values:\n    {allowed_values: \"E3\" allowed_values: \"E4\"}\nThe accepted values at `organizations\/foo` are `E1`, `E2`.\nThe accepted values at `projects\/bar` are `E3`, and `E4`.\n\nExample 2 (inherited values):\n  `organizations\/foo` has a `Policy` with values:\n    {allowed_values: \"E1\" allowed_values:\"E2\"}\n  `projects\/bar` has a `Policy` with values:\n    {value: \"E3\" value: \"E4\" inherit_from_parent: true}\nThe accepted values at `organizations\/foo` are `E1`, `E2`.\nThe accepted values at `projects\/bar` are `E1`, `E2`, `E3`, and `E4`.\n\nExample 3 (inheriting both allowed and denied values):\n  `organizations\/foo` has a `Policy` with values:\n    {allowed_values: \"E1\" allowed_values: \"E2\"}\n  `projects\/bar` has a `Policy` with:\n    {denied_values: \"E1\"}\nThe accepted values at `organizations\/foo` are `E1`, `E2`.\nThe value accepted at `projects\/bar` is `E2`.\n\nExample 4 (RestoreDefault):\n  `organizations\/foo` has a `Policy` with values:\n    {allowed_values: \"E1\" allowed_values:\"E2\"}\n  `projects\/bar` has a `Policy` with values:\n    {RestoreDefault: {}}\nThe accepted values at `organizations\/foo` are `E1`, `E2`.\nThe accepted values at `projects\/bar` are either all or none depending on\nthe value of `constraint_default` (if `ALLOW`, all; if\n`DENY`, none).\n\nExample 5 (no policy inherits parent policy):\n  `organizations\/foo` has no `Policy` set.\n  `projects\/bar` has no `Policy` set.\nThe accepted values at both levels are either all or none depending on\nthe value of `constraint_default` (if `ALLOW`, all; if\n`DENY`, none).\n\nExample 6 (ListConstraint allowing all):\n  `organizations\/foo` has a `Policy` with values:\n    {allowed_values: \"E1\" allowed_values: \"E2\"}\n  `projects\/bar` has a `Policy` with:\n    {all: ALLOW}\nThe accepted values at `organizations\/foo` are `E1`, E2`.\nAny value is accepted at `projects\/bar`.\n\nExample 7 (ListConstraint allowing none):\n  `organizations\/foo` has a `Policy` with values:\n    {allowed_values: \"E1\" allowed_values: \"E2\"}\n  `projects\/bar` has a `Policy` with:\n    {all: DENY}\nThe accepted values at `organizations\/foo` are `E1`, E2`.\nNo value is accepted at `projects\/bar`.\n\nExample 10 (allowed and denied subtrees of Resource Manager hierarchy):\nGiven the following resource hierarchy\n  O1->{F1, F2}; F1->{P1}; F2->{P2, P3},\n  `organizations\/foo` has a `Policy` with values:\n    {allowed_values: \"under:organizations\/O1\"}\n  `projects\/bar` has a `Policy` with:\n    {allowed_values: \"under:projects\/P3\"}\n    {denied_values: \"under:folders\/F2\"}\nThe accepted values at `organizations\/foo` are `organizations\/O1`,\n  `folders\/F1`, `folders\/F2`, `projects\/P1`, `projects\/P2`,\n  `projects\/P3`.\nThe accepted values at `projects\/bar` are `organizations\/O1`,\n  `folders\/F1`, `projects\/P1`.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudOrgpolicyV1BooleanPolicy": {
      "id": "GoogleCloudOrgpolicyV1BooleanPolicy",
      "description": "Used in `policy_type` to specify how `boolean_policy` will behave at this\nresource.",
      "type": "object",
      "properties": {
        "enforced": {
          "description": "If `true`, then the `Policy` is enforced. If `false`, then any\nconfiguration is acceptable.\n\nSuppose you have a `Constraint`\n`constraints\/compute.disableSerialPortAccess` with `constraint_default`\nset to `ALLOW`. A `Policy` for that `Constraint` exhibits the following\nbehavior:\n  - If the `Policy` at this resource has enforced set to `false`, serial\n    port connection attempts will be allowed.\n  - If the `Policy` at this resource has enforced set to `true`, serial\n    port connection attempts will be refused.\n  - If the `Policy` at this resource is `RestoreDefault`, serial port\n    connection attempts will be allowed.\n  - If no `Policy` is set at this resource or anywhere higher in the\n    resource hierarchy, serial port connection attempts will be allowed.\n  - If no `Policy` is set at this resource, but one exists higher in the\n    resource hierarchy, the behavior is as if the`Policy` were set at\n    this resource.\n\nThe following examples demonstrate the different possible layerings:\n\nExample 1 (nearest `Constraint` wins):\n  `organizations\/foo` has a `Policy` with:\n    {enforced: false}\n  `projects\/bar` has no `Policy` set.\nThe constraint at `projects\/bar` and `organizations\/foo` will not be\nenforced.\n\nExample 2 (enforcement gets replaced):\n  `organizations\/foo` has a `Policy` with:\n    {enforced: false}\n  `projects\/bar` has a `Policy` with:\n    {enforced: true}\nThe constraint at `organizations\/foo` is not enforced.\nThe constraint at `projects\/bar` is enforced.\n\nExample 3 (RestoreDefault):\n  `organizations\/foo` has a `Policy` with:\n    {enforced: true}\n  `projects\/bar` has a `Policy` with:\n    {RestoreDefault: {}}\nThe constraint at `organizations\/foo` is enforced.\nThe constraint at `projects\/bar` is not enforced, because\n`constraint_default` for the `Constraint` is `ALLOW`.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudOrgpolicyV1RestoreDefault": {
      "id": "GoogleCloudOrgpolicyV1RestoreDefault",
      "description": "Ignores policies set above this resource and restores the\n`constraint_default` enforcement behavior of the specific `Constraint` at\nthis resource.\n\nSuppose that `constraint_default` is set to `ALLOW` for the\n`Constraint` `constraints\/serviceuser.services`. Suppose that organization\nfoo.com sets a `Policy` at their Organization resource node that restricts\nthe allowed service activations to deny all service activations. They\ncould then set a `Policy` with the `policy_type` `restore_default` on\nseveral experimental projects, restoring the `constraint_default`\nenforcement of the `Constraint` for only those projects, allowing those\nprojects to have all services activated.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleIdentityAccesscontextmanagerV1AccessPolicy": {
      "id": "GoogleIdentityAccesscontextmanagerV1AccessPolicy",
      "description": "`AccessPolicy` is a container for `AccessLevels` (which define the necessary\nattributes to use GCP services) and `ServicePerimeters` (which define regions\nof services able to freely pass data within a perimeter). An access policy is\nglobally visible within an organization, and the restrictions it specifies\napply to all projects within an organization.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Resource name of the `AccessPolicy`. Format:\n`accessPolicies\/{policy_id}`",
          "type": "string"
        },
        "parent": {
          "description": "Required. The parent of this `AccessPolicy` in the Cloud Resource\nHierarchy. Currently immutable once created. Format:\n`organizations\/{organization_id}`",
          "type": "string"
        },
        "title": {
          "description": "Required. Human readable title. Does not affect behavior.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time the `AccessPolicy` was created in UTC.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time the `AccessPolicy` was updated in UTC.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleIdentityAccesscontextmanagerV1AccessLevel": {
      "id": "GoogleIdentityAccesscontextmanagerV1AccessLevel",
      "description": "An `AccessLevel` is a label that can be applied to requests to GCP services,\nalong with a list of requirements necessary for the label to be applied.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Resource name for the Access Level. The `short_name` component\nmust begin with a letter and only include alphanumeric and '_'. Format:\n`accessPolicies\/{policy_id}\/accessLevels\/{short_name}`",
          "type": "string"
        },
        "title": {
          "description": "Human readable title. Must be unique within the Policy.",
          "type": "string"
        },
        "description": {
          "description": "Description of the `AccessLevel` and its use. Does not affect behavior.",
          "type": "string"
        },
        "basic": {
          "description": "A `BasicLevel` composed of `Conditions`.",
          "$ref": "GoogleIdentityAccesscontextmanagerV1BasicLevel"
        },
        "createTime": {
          "description": "Output only. Time the `AccessLevel` was created in UTC.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time the `AccessLevel` was updated in UTC.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleIdentityAccesscontextmanagerV1BasicLevel": {
      "id": "GoogleIdentityAccesscontextmanagerV1BasicLevel",
      "description": "`BasicLevel` is an `AccessLevel` using a set of recommended features.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Required. A list of requirements for the `AccessLevel` to be granted.",
          "type": "array",
          "items": {
            "$ref": "GoogleIdentityAccesscontextmanagerV1Condition"
          }
        },
        "combiningFunction": {
          "description": "How the `conditions` list should be combined to determine if a request is\ngranted this `AccessLevel`. If AND is used, each `Condition` in\n`conditions` must be satisfied for the `AccessLevel` to be applied. If OR\nis used, at least one `Condition` in `conditions` must be satisfied for the\n`AccessLevel` to be applied. Default behavior is AND.",
          "enumDescriptions": [
            "All `Conditions` must be true for the `BasicLevel` to be true.",
            "If at least one `Condition` is true, then the `BasicLevel` is true."
          ],
          "type": "string",
          "enum": [
            "AND",
            "OR"
          ]
        }
      }
    },
    "GoogleIdentityAccesscontextmanagerV1Condition": {
      "id": "GoogleIdentityAccesscontextmanagerV1Condition",
      "description": "A condition necessary for an `AccessLevel` to be granted. The Condition is an\nAND over its fields. So a Condition is true if: 1) the request IP is from one\nof the listed subnetworks AND 2) the originating device complies with the\nlisted device policy AND 3) all listed access levels are granted AND 4) the\nrequest was sent at a time allowed by the DateTimeRestriction.",
      "type": "object",
      "properties": {
        "ipSubnetworks": {
          "description": "CIDR block IP subnetwork specification. May be IPv4 or IPv6. Note that for\na CIDR IP address block, the specified IP address portion must be properly\ntruncated (i.e. all the host bits must be zero) or the input is considered\nmalformed. For example, \"192.0.2.0\/24\" is accepted but \"192.0.2.1\/24\" is\nnot. Similarly, for IPv6, \"2001:db8::\/32\" is accepted whereas\n\"2001:db8::1\/32\" is not. The originating IP of a request must be in one of\nthe listed subnets in order for this Condition to be true. If empty, all IP\naddresses are allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "devicePolicy": {
          "description": "Device specific restrictions, all restrictions must hold for the\nCondition to be true. If not specified, all devices are allowed.",
          "$ref": "GoogleIdentityAccesscontextmanagerV1DevicePolicy"
        },
        "requiredAccessLevels": {
          "description": "A list of other access levels defined in the same `Policy`, referenced by\nresource name. Referencing an `AccessLevel` which does not exist is an\nerror. All access levels listed must be granted for the Condition\nto be true. Example:\n\"`accessPolicies\/MY_POLICY\/accessLevels\/LEVEL_NAME\"`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "negate": {
          "description": "Whether to negate the Condition. If true, the Condition becomes a NAND over\nits non-empty fields, each field must be false for the Condition overall to\nbe satisfied. Defaults to false.",
          "type": "boolean"
        },
        "members": {
          "description": "The request must be made by one of the provided user or service\naccounts. Groups are not supported.\nSyntax:\n`user:{emailid}`\n`serviceAccount:{emailid}`\nIf not specified, a request may come from any user.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "description": "The request must originate from one of the provided countries\/regions.\nMust be valid ISO 3166-1 alpha-2 codes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleIdentityAccesscontextmanagerV1DevicePolicy": {
      "id": "GoogleIdentityAccesscontextmanagerV1DevicePolicy",
      "description": "`DevicePolicy` specifies device specific restrictions necessary to acquire a\ngiven access level. A `DevicePolicy` specifies requirements for requests from\ndevices to be granted access levels, it does not do any enforcement on the\ndevice. `DevicePolicy` acts as an AND over all specified fields, and each\nrepeated field is an OR over its elements. Any unset fields are ignored. For\nexample, if the proto is { os_type : DESKTOP_WINDOWS, os_type :\nDESKTOP_LINUX, encryption_status: ENCRYPTED}, then the DevicePolicy will be\ntrue for requests originating from encrypted Linux desktops and encrypted\nWindows desktops.",
      "type": "object",
      "properties": {
        "requireScreenlock": {
          "description": "Whether or not screenlock is required for the DevicePolicy to be true.\nDefaults to `false`.",
          "type": "boolean"
        },
        "allowedEncryptionStatuses": {
          "description": "Allowed encryptions statuses, an empty list allows all statuses.",
          "enumDescriptions": [
            "The encryption status of the device is not specified or not known.",
            "The device does not support encryption.",
            "The device supports encryption, but is currently unencrypted.",
            "The device is encrypted."
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ENCRYPTION_UNSPECIFIED",
              "ENCRYPTION_UNSUPPORTED",
              "UNENCRYPTED",
              "ENCRYPTED"
            ]
          }
        },
        "osConstraints": {
          "description": "Allowed OS versions, an empty list allows all types and all versions.",
          "type": "array",
          "items": {
            "$ref": "GoogleIdentityAccesscontextmanagerV1OsConstraint"
          }
        },
        "allowedDeviceManagementLevels": {
          "description": "Allowed device management levels, an empty list allows all management\nlevels.",
          "enumDescriptions": [
            "The device's management level is not specified or not known.",
            "The device is not managed.",
            "Basic management is enabled, which is generally limited to monitoring and\nwiping the corporate account.",
            "Complete device management. This includes more thorough monitoring and the\nability to directly manage the device (such as remote wiping). This can be\nenabled through the Android Enterprise Platform."
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MANAGEMENT_UNSPECIFIED",
              "NONE",
              "BASIC",
              "COMPLETE"
            ]
          }
        },
        "requireAdminApproval": {
          "description": "Whether the device needs to be approved by the customer admin.",
          "type": "boolean"
        },
        "requireCorpOwned": {
          "description": "Whether the device needs to be corp owned.",
          "type": "boolean"
        }
      }
    },
    "GoogleIdentityAccesscontextmanagerV1OsConstraint": {
      "id": "GoogleIdentityAccesscontextmanagerV1OsConstraint",
      "description": "A restriction on the OS type and version of devices making requests.",
      "type": "object",
      "properties": {
        "osType": {
          "description": "Required. The allowed OS type.",
          "enumDescriptions": [
            "The operating system of the device is not specified or not known.",
            "A desktop Mac operating system.",
            "A desktop Windows operating system.",
            "A desktop Linux operating system.",
            "A desktop ChromeOS operating system."
          ],
          "type": "string",
          "enum": [
            "OS_UNSPECIFIED",
            "DESKTOP_MAC",
            "DESKTOP_WINDOWS",
            "DESKTOP_LINUX",
            "DESKTOP_CHROME_OS"
          ]
        },
        "minimumVersion": {
          "description": "The minimum allowed OS version. If not set, any version of this OS\nsatisfies the constraint. Format: `\"major.minor.patch\"`.\nExamples: `\"10.5.301\"`, `\"9.2.1\"`.",
          "type": "string"
        },
        "requireVerifiedChromeOs": {
          "description": "Only allows requests from devices with a verified Chrome OS.\nVerifications includes requirements that the device is enterprise-managed,\nconformant to domain policies, and the caller has permission to call\nthe API targeted by the request.",
          "type": "boolean"
        }
      }
    },
    "GoogleIdentityAccesscontextmanagerV1ServicePerimeter": {
      "id": "GoogleIdentityAccesscontextmanagerV1ServicePerimeter",
      "description": "`ServicePerimeter` describes a set of GCP resources which can freely import\nand export data amongst themselves, but not export outside of the\n`ServicePerimeter`. If a request with a source within this `ServicePerimeter`\nhas a target outside of the `ServicePerimeter`, the request will be blocked.\nOtherwise the request is allowed. There are two types of Service Perimeter -\nRegular and Bridge. Regular Service Perimeters cannot overlap, a single GCP\nproject can only belong to a single regular Service Perimeter. Service\nPerimeter Bridges can contain only GCP projects as members, a single GCP\nproject may belong to multiple Service Perimeter Bridges.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Resource name for the ServicePerimeter.  The `short_name`\ncomponent must begin with a letter and only include alphanumeric and '_'.\nFormat: `accessPolicies\/{policy_id}\/servicePerimeters\/{short_name}`",
          "type": "string"
        },
        "title": {
          "description": "Human readable title. Must be unique within the Policy.",
          "type": "string"
        },
        "description": {
          "description": "Description of the `ServicePerimeter` and its use. Does not affect\nbehavior.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time the `ServicePerimeter` was created in UTC.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time the `ServicePerimeter` was updated in UTC.",
          "type": "string",
          "format": "google-datetime"
        },
        "perimeterType": {
          "description": "Perimeter type indicator. A single project is\nallowed to be a member of single regular perimeter, but multiple service\nperimeter bridges. A project cannot be a included in a perimeter bridge\nwithout being included in regular perimeter. For perimeter bridges,\nthe restricted service list as well as access level lists must be\nempty.",
          "enumDescriptions": [
            "Regular Perimeter.",
            "Perimeter Bridge."
          ],
          "type": "string",
          "enum": [
            "PERIMETER_TYPE_REGULAR",
            "PERIMETER_TYPE_BRIDGE"
          ]
        },
        "status": {
          "description": "Current ServicePerimeter configuration. Specifies sets of resources,\nrestricted services and access levels that determine perimeter\ncontent and boundaries.",
          "$ref": "GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig"
        }
      }
    },
    "GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig": {
      "id": "GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig",
      "description": "`ServicePerimeterConfig` specifies a set of GCP resources that describe\nspecific Service Perimeter configuration.",
      "type": "object",
      "properties": {
        "resources": {
          "description": "A list of GCP resources that are inside of the service perimeter.\nCurrently only projects are allowed. Format: `projects\/{project_number}`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accessLevels": {
          "description": "A list of `AccessLevel` resource names that allow resources within the\n`ServicePerimeter` to be accessed from the internet. `AccessLevels` listed\nmust be in the same policy as this `ServicePerimeter`. Referencing a\nnonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are\nlisted, resources within the perimeter can only be accessed via GCP calls\nwith request origins within the perimeter. Example:\n`\"accessPolicies\/MY_POLICY\/accessLevels\/MY_LEVEL\"`.\nFor Service Perimeter Bridge, must be empty.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "restrictedServices": {
          "description": "GCP services that are subject to the Service Perimeter restrictions. For\nexample, if `storage.googleapis.com` is specified, access to the storage\nbuckets inside the perimeter must meet the perimeter's access restrictions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AnalyzeIamPolicyResponse": {
      "id": "AnalyzeIamPolicyResponse",
      "description": "A response message for AssetService.AnalyzeIamPolicy.",
      "type": "object",
      "properties": {
        "analysisResults": {
          "description": "A list of IamPolicyAnalysisResult that matches the request, or empty if\nno result is found.",
          "type": "array",
          "items": {
            "$ref": "IamPolicyAnalysisResult"
          }
        },
        "fullyExplored": {
          "description": "Represents whether all entries in the analysis_results have been fully\nexplored to answer the query in the request.",
          "type": "boolean"
        },
        "nonCriticalErrors": {
          "description": "A list of non-critical errors happened during the request handling to\nexplain why `fully_explored` is false, or empty if no error happened.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAssetV1p4alpha1AnalysisState"
          }
        }
      }
    },
    "IamPolicyAnalysisResult": {
      "id": "IamPolicyAnalysisResult",
      "description": "IAM Policy analysis result, consisting of one IAM policy binding and derived\naccess control lists.",
      "type": "object",
      "properties": {
        "attachedResourceFullName": {
          "description": "The full name of the resource to which the iam_binding policy attaches.",
          "type": "string"
        },
        "iamBinding": {
          "description": "The Cloud IAM policy binding under analysis.",
          "$ref": "Binding"
        },
        "accessControlLists": {
          "description": "The access control lists derived from the iam_binding that match or\npotentially match resource and access selectors specified in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAssetV1p4alpha1AccessControlList"
          }
        },
        "identityList": {
          "description": "The identity list derived from members of the iam_binding that match or\npotentially match identity selector specified in the request.",
          "$ref": "GoogleCloudAssetV1p4alpha1IdentityList"
        },
        "fullyExplored": {
          "description": "Represents whether all nodes in the transitive closure of the\niam_binding node have been explored.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAssetV1p4alpha1AccessControlList": {
      "id": "GoogleCloudAssetV1p4alpha1AccessControlList",
      "description": "An access control list, derived from the above IAM policy binding, which\ncontains a set of resources and accesses. May include one\nitem from each set to compose an access control entry.\n\nNOTICE that there could be multiple access control lists for one IAM policy\nbinding. The access control lists are created per resource type.\n\nFor example, assume we have the following cases in one IAM policy binding:\n- Permission P1 and P2 apply to resource R1 and R2 of resource type RT1;\n- Permission P3 applies to resource R3 and R4 of resource type RT2;\n\nThis will result in the following access control lists:\n- AccessControlList 1: RT1, [R1, R2], [P1, P2]\n- AccessControlList 2: RT2, [R3, R4], [P3]",
      "type": "object",
      "properties": {
        "baseResourceType": {
          "description": "The unified resource type name of the resource type that this access\ncontrol list is based on, such as\n\"compute.googleapis.com\/Instance\" for Compute Engine instance, etc.",
          "type": "string"
        },
        "resources": {
          "description": "The resources that match one of the following conditions:\n- The resource_selector, if it is specified in request;\n- Otherwise, resources reachable from the policy attached resource.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAssetV1p4alpha1Resource"
          }
        },
        "accesses": {
          "description": "The accesses that match one of the following conditions:\n- The access_selector, if it is specified in request;\n- Otherwise, access specifiers reachable from the policy binding's role.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAssetV1p4alpha1Access"
          }
        },
        "resourceEdges": {
          "description": "Resource edges of the graph starting from the policy attached\nresource to any descendant resources. The Edge.source_node contains\nthe full resource name of a parent resource and Edge.target_node\ncontains the full resource name of a child resource. This field is\npresent only if the output_resource_edges option is enabled in request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAssetV1p4alpha1Edge"
          }
        }
      }
    },
    "GoogleCloudAssetV1p4alpha1Resource": {
      "id": "GoogleCloudAssetV1p4alpha1Resource",
      "description": "A GCP resource that appears in an access control list.",
      "type": "object",
      "properties": {
        "fullResourceName": {
          "description": "The [full resource name](https:\/\/aip.dev\/122#full-resource-names).",
          "type": "string"
        },
        "analysisState": {
          "description": "The analysis state of this resource node.",
          "$ref": "GoogleCloudAssetV1p4alpha1AnalysisState"
        }
      }
    },
    "GoogleCloudAssetV1p4alpha1AnalysisState": {
      "id": "GoogleCloudAssetV1p4alpha1AnalysisState",
      "description": "Represents analysis state of each node in the result graph or non-critical\nerrors in the response.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Google standard error code that best describes the state.\nFor example:\n- OK means the node has been successfully explored;\n- PERMISSION_DENIED means an access denied error is encountered;\n- DEADLINE_EXCEEDED means the node hasn't been explored in time;",
          "enumDescriptions": [
            "Not an error; returned on success\n\nHTTP Mapping: 200 OK",
            "The operation was cancelled, typically by the caller.\n\nHTTP Mapping: 499 Client Closed Request",
            "Unknown error.  For example, this error may be returned when\na `Status` value received from another address space belongs to\nan error space that is not known in this address space.  Also\nerrors raised by APIs that do not return enough error information\nmay be converted to this error.\n\nHTTP Mapping: 500 Internal Server Error",
            "The client specified an invalid argument.  Note that this differs\nfrom `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments\nthat are problematic regardless of the state of the system\n(e.g., a malformed file name).\n\nHTTP Mapping: 400 Bad Request",
            "The deadline expired before the operation could complete. For operations\nthat change the state of the system, this error may be returned\neven if the operation has completed successfully.  For example, a\nsuccessful response from a server could have been delayed long\nenough for the deadline to expire.\n\nHTTP Mapping: 504 Gateway Timeout",
            "Some requested entity (e.g., file or directory) was not found.\n\nNote to server developers: if a request is denied for an entire class\nof users, such as gradual feature rollout or undocumented whitelist,\n`NOT_FOUND` may be used. If a request is denied for some users within\na class of users, such as user-based access control, `PERMISSION_DENIED`\nmust be used.\n\nHTTP Mapping: 404 Not Found",
            "The entity that a client attempted to create (e.g., file or directory)\nalready exists.\n\nHTTP Mapping: 409 Conflict",
            "The caller does not have permission to execute the specified\noperation. `PERMISSION_DENIED` must not be used for rejections\ncaused by exhausting some resource (use `RESOURCE_EXHAUSTED`\ninstead for those errors). `PERMISSION_DENIED` must not be\nused if the caller can not be identified (use `UNAUTHENTICATED`\ninstead for those errors). This error code does not imply the\nrequest is valid or the requested entity exists or satisfies\nother pre-conditions.\n\nHTTP Mapping: 403 Forbidden",
            "The request does not have valid authentication credentials for the\noperation.\n\nHTTP Mapping: 401 Unauthorized",
            "Some resource has been exhausted, perhaps a per-user quota, or\nperhaps the entire file system is out of space.\n\nHTTP Mapping: 429 Too Many Requests",
            "The operation was rejected because the system is not in a state\nrequired for the operation's execution.  For example, the directory\nto be deleted is non-empty, an rmdir operation is applied to\na non-directory, etc.\n\nService implementors can use the following guidelines to decide\nbetween `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:\n (a) Use `UNAVAILABLE` if the client can retry just the failing call.\n (b) Use `ABORTED` if the client should retry at a higher level\n     (e.g., when a client-specified test-and-set fails, indicating the\n     client should restart a read-modify-write sequence).\n (c) Use `FAILED_PRECONDITION` if the client should not retry until\n     the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n     fails because the directory is non-empty, `FAILED_PRECONDITION`\n     should be returned since the client should not retry unless\n     the files are deleted from the directory.\n\nHTTP Mapping: 400 Bad Request",
            "The operation was aborted, typically due to a concurrency issue such as\na sequencer check failure or transaction abort.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 409 Conflict",
            "The operation was attempted past the valid range.  E.g., seeking or\nreading past end-of-file.\n\nUnlike `INVALID_ARGUMENT`, this error indicates a problem that may\nbe fixed if the system state changes. For example, a 32-bit file\nsystem will generate `INVALID_ARGUMENT` if asked to read at an\noffset that is not in the range [0,2^32-1], but it will generate\n`OUT_OF_RANGE` if asked to read from an offset past the current\nfile size.\n\nThere is a fair bit of overlap between `FAILED_PRECONDITION` and\n`OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific\nerror) when it applies so that callers who are iterating through\na space can easily look for an `OUT_OF_RANGE` error to detect when\nthey are done.\n\nHTTP Mapping: 400 Bad Request",
            "The operation is not implemented or is not supported\/enabled in this\nservice.\n\nHTTP Mapping: 501 Not Implemented",
            "Internal errors.  This means that some invariants expected by the\nunderlying system have been broken.  This error code is reserved\nfor serious errors.\n\nHTTP Mapping: 500 Internal Server Error",
            "The service is currently unavailable.  This is most likely a\ntransient condition, which can be corrected by retrying with\na backoff. Note that it is not always safe to retry\nnon-idempotent operations.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 503 Service Unavailable",
            "Unrecoverable data loss or corruption.\n\nHTTP Mapping: 500 Internal Server Error"
          ],
          "type": "string",
          "enum": [
            "OK",
            "CANCELLED",
            "UNKNOWN",
            "INVALID_ARGUMENT",
            "DEADLINE_EXCEEDED",
            "NOT_FOUND",
            "ALREADY_EXISTS",
            "PERMISSION_DENIED",
            "UNAUTHENTICATED",
            "RESOURCE_EXHAUSTED",
            "FAILED_PRECONDITION",
            "ABORTED",
            "OUT_OF_RANGE",
            "UNIMPLEMENTED",
            "INTERNAL",
            "UNAVAILABLE",
            "DATA_LOSS"
          ]
        },
        "cause": {
          "description": "The human-readable description of the cause of failure.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAssetV1p4alpha1Access": {
      "id": "GoogleCloudAssetV1p4alpha1Access",
      "description": "A role or permission that appears in an access control list.",
      "type": "object",
      "properties": {
        "role": {
          "description": "The role.",
          "type": "string"
        },
        "permission": {
          "description": "The permission.",
          "type": "string"
        },
        "analysisState": {
          "description": "The analysis state of this access node.",
          "$ref": "GoogleCloudAssetV1p4alpha1AnalysisState"
        }
      }
    },
    "GoogleCloudAssetV1p4alpha1Edge": {
      "id": "GoogleCloudAssetV1p4alpha1Edge",
      "description": "A directional edge.",
      "type": "object",
      "properties": {
        "sourceNode": {
          "description": "The source node of the edge.",
          "type": "string"
        },
        "targetNode": {
          "description": "The target node of the edge.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAssetV1p4alpha1IdentityList": {
      "id": "GoogleCloudAssetV1p4alpha1IdentityList",
      "type": "object",
      "properties": {
        "identities": {
          "description": "Only the identities that match one of the following conditions will be\npresented:\n- The identity_selector, if it is specified in request;\n- Otherwise, identities reachable from the policy binding's members.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAssetV1p4alpha1Identity"
          }
        },
        "groupEdges": {
          "description": "Group identity edges of the graph starting from the binding's\ngroup members to any node of the identities. The Edge.source_node\ncontains a group, such as \"group:parent@google.com\". The\nEdge.target_node contains a member of the group,\nsuch as \"group:child@google.com\" or \"user:foo@google.com\".\nThis field is present only if the output_group_edges option is enabled in\nrequest.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAssetV1p4alpha1Edge"
          }
        }
      }
    },
    "GoogleCloudAssetV1p4alpha1Identity": {
      "id": "GoogleCloudAssetV1p4alpha1Identity",
      "description": "An identity that appears in an access control list.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The identity name in any form of members appear in\n[IAM policy\nbinding](https:\/\/cloud.google.com\/iam\/reference\/rest\/v1\/Binding), such\nas:\n- user:foo@google.com\n- group:group1@google.com\n- serviceAccount:s1@prj1.iam.gserviceaccount.com\n- projectOwner:some_project_id\n- domain:google.com\n- allUsers\n- etc.",
          "type": "string"
        },
        "analysisState": {
          "description": "The analysis state of this identity node.",
          "$ref": "GoogleCloudAssetV1p4alpha1AnalysisState"
        }
      }
    }
  },
  "resources": {
    "v1p4alpha1": {
      "methods": {
        "exportAssets": {
          "id": "cloudasset.exportAssets",
          "path": "v1p4alpha1/{+parent}:exportAssets",
          "flatPath": "v1p4alpha1/{v1p4alpha1Id}/{v1p4alpha1Id1}:exportAssets",
          "httpMethod": "POST",
          "parameters": {
            "parent": {
              "description": "Required. The relative name of the root asset. This can only be an\norganization number (such as \"organizations\/123\"), a project ID (such as\n\"projects\/my-project-id\"), or a project number (such as \"projects\/12345\"),\nor a folder number (such as \"folders\/123\").",
              "location": "path",
              "required": true,
              "pattern": "^[^\/]+\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "request": {
            "$ref": "ExportAssetsRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Exports assets with time and resource types to a given Cloud Storage\nlocation. The output format is newline-delimited JSON.\nThis API implements the google.longrunning.Operation API allowing you\nto keep track of the export."
        },
        "batchGetAssetsHistory": {
          "id": "cloudasset.batchGetAssetsHistory",
          "path": "v1p4alpha1/{+parent}:batchGetAssetsHistory",
          "flatPath": "v1p4alpha1/{v1p4alpha1Id}/{v1p4alpha1Id1}:batchGetAssetsHistory",
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "description": "Required. The relative name of the root asset. It can only be an\norganization number (such as \"organizations\/123\"), a project ID (such as\n\"projects\/my-project-id\")\", or a project number (such as \"projects\/12345\").",
              "location": "path",
              "required": true,
              "pattern": "^[^\/]+\/[^\/]+$",
              "type": "string"
            },
            "assetNames": {
              "description": "A list of the full names of the assets. For example:\n`\/\/compute.googleapis.com\/projects\/my_project_123\/zones\/zone1\/instances\/instance1`.\nSee [Resource\nNames](https:\/\/cloud.google.com\/apis\/design\/resource_names#full_resource_name)\nand [Resource Name\nFormat](https:\/\/cloud.google.com\/resource-manager\/docs\/cloud-asset-inventory\/resource-name-format)\nfor more info.\n\nThe request becomes a no-op if the asset name list is empty, and the max\nsize of the asset name list is 100 in one request.",
              "location": "query",
              "repeated": true,
              "type": "string"
            },
            "contentType": {
              "description": "Required. The content type.",
              "location": "query",
              "type": "string",
              "enum": [
                "CONTENT_TYPE_UNSPECIFIED",
                "RESOURCE",
                "IAM_POLICY",
                "IAM_POLICY_NAME",
                "ORG_POLICY",
                "ACCESS_POLICY"
              ]
            },
            "readTimeWindow.startTime": {
              "description": "Start time of the time window (exclusive).",
              "location": "query",
              "type": "string",
              "format": "google-datetime"
            },
            "readTimeWindow.endTime": {
              "description": "End time of the time window (inclusive).\nCurrent timestamp if not specified.",
              "location": "query",
              "type": "string",
              "format": "google-datetime"
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "response": {
            "$ref": "BatchGetAssetsHistoryResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Batch gets the update history of assets that overlap a time window.\nFor RESOURCE content, this API outputs history with asset in both\nnon-delete or deleted status.\nFor IAM_POLICY content, this API outputs history when the asset and its\nattached IAM POLICY both exist. This can create gaps in the output history.\nIf a specified asset does not exist, this API returns an INVALID_ARGUMENT\nerror."
        },
        "analyzeIamPolicy": {
          "id": "cloudasset.analyzeIamPolicy",
          "path": "v1p4alpha1/{+parent}:analyzeIamPolicy",
          "flatPath": "v1p4alpha1/{v1p4alpha1Id}/{v1p4alpha1Id1}:analyzeIamPolicy",
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "description": "Required. The relative name of root asset to do analysis . This can only\nbe an organization number (such as \"organizations\/123\") for now.",
              "location": "path",
              "required": true,
              "pattern": "^[^\/]+\/[^\/]+$",
              "type": "string"
            },
            "resourceSelector.fullResourceName": {
              "description": "Required. The [full resource\nname](https:\/\/cloud.google.com\/apis\/design\/resource_names#full_resource_name)\n.",
              "location": "query",
              "type": "string"
            },
            "identitySelector.identity": {
              "description": "Required. The identity appear in the form of members in\n[IAM policy\nbinding](https:\/\/cloud.google.com\/iam\/reference\/rest\/v1\/Binding).",
              "location": "query",
              "type": "string"
            },
            "accessSelector.roles": {
              "description": "Optional. The roles to appear in result.",
              "location": "query",
              "repeated": true,
              "type": "string"
            },
            "accessSelector.permissions": {
              "description": "Optional. The permissions to appear in result.",
              "location": "query",
              "repeated": true,
              "type": "string"
            },
            "options.expandGroups": {
              "description": "Optional. If true, the identities section of the result will expand any\nGoogle groups appearing in an IAM policy binding.\n\nIf identity_selector is specified, the identity in the result will\nbe determined by the selector, and this flag will have no effect.\n\nDefault is false.",
              "location": "query",
              "type": "boolean"
            },
            "options.expandRoles": {
              "description": "Optional. If true, the access section of result will expand any roles\nappearing in IAM policy bindings to include their permissions.\n\nIf access_selector is specified, the access section of the result\nwill be determined by the selector, and this flag will have no effect.\n\nDefault is false.",
              "location": "query",
              "type": "boolean"
            },
            "options.expandResources": {
              "description": "Optional. If true, the resource section of the result will expand any\nresource attached to an IAM policy to include resources lower in the\nresource hierarchy.\n\nFor example, if the request analyzes for which resources user A has\npermission P, and the results include an IAM policy with P on a GCP\nfolder, the results will also include resources in that folder with\npermission P.\n\nIf resource_selector is specified, the resource section of the result\nwill be determined by the selector, and this flag will have no effect.\nDefault is false.",
              "location": "query",
              "type": "boolean"
            },
            "options.outputResourceEdges": {
              "description": "Optional. If true, the result will output resource edges, starting\nfrom the policy attached resource, to any expanded resources.\nDefault is false.",
              "location": "query",
              "type": "boolean"
            },
            "options.outputGroupEdges": {
              "description": "Optional. If true, the result will output group identity edges, starting\nfrom the binding's group members, to any expanded identities.\nDefault is false.",
              "location": "query",
              "type": "boolean"
            },
            "options.outputPartialResultBeforeTimeout": {
              "description": "Optional. If true, you will get a response with partial result instead of\na DEADLINE_EXCEEDED error when your request processing takes longer than\nthe deadline.",
              "location": "query",
              "type": "boolean"
            },
            "options.maxFanoutsPerGroup": {
              "description": "Optional. The maximum number of fanouts per group when expand_groups\nis enabled.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "options.maxFanoutsPerResource": {
              "description": "Optional. The maximum number of fanouts per parent resource, such as\nGCP Project etc., when expand_resources is enabled.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "response": {
            "$ref": "AnalyzeIamPolicyResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Analyzes IAM policies based on the specified request. Returns\na list of IamPolicyAnalysisResult matching the request."
        }
      }
    }
  },
  "basePath": ""
}